"use client"

import { useState } from "react"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"
import { Progress } from "@/components/ui/progress"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Alert, AlertDescription } from "@/components/ui/alert"
import { Separator } from "@/components/ui/separator"
import { Textarea } from "@/components/ui/textarea"
import {
  AlertTriangle,
  Shield,
  Clock,
  CheckCircle,
  ExternalLink,
  Copy,
  Download,
  FileText,
  Server,
  Activity,
  ArrowLeft,
  Calendar,
  User,
  Target,
  Code,
  BookOpen,
  Wrench,
  Eye,
  AlertCircle,
} from "lucide-react"

interface VulnerabilityDetail {
  id: string
  cveId: string
  title: string
  description: string
  severity: "critical" | "high" | "medium" | "low"
  cvssScore: number
  cvssVector: string
  category: string
  discoveredDate: string
  lastUpdated: string
  status: "open" | "in-progress" | "resolved" | "false-positive"
  affectedAssets: Array<{
    id: string
    name: string
    type: string
    ip: string
    impact: string
  }>
  technicalDetails: {
    attackVector: string
    complexity: string
    privilegesRequired: string
    userInteraction: string
    scope: string
    confidentialityImpact: string
    integrityImpact: string
    availabilityImpact: string
  }
  remediation: {
    summary: string
    steps: Array<{
      id: number
      title: string
      description: string
      command?: string
      completed: boolean
      estimatedTime: string
    }>
    references: Array<{
      title: string
      url: string
      type: "vendor" | "cve" | "advisory" | "patch"
    }>
  }
  compliance: {
    standards: string[]
    requirements: string[]
  }
  timeline: Array<{
    date: string
    event: string
    user: string
    description: string
  }>
}

export default function VulnerabilityDetailPage() {
  const [vulnerability] = useState<VulnerabilityDetail>({
    id: "vuln-001",
    cveId: "CVE-2024-0001",
    title: "DJI 无人机飞控系统未授权访问漏洞",
    description:
      "DJI M300 RTK 飞控系统存在未授权访问漏洞，攻击者可通过网络接口获取敏感的飞行数据和控制权限，可能导致无人机被恶意控制或数据泄露。",
    severity: "critical",
    cvssScore: 9.1,
    cvssVector: "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    category: "未授权访问",
    discoveredDate: "2024-01-15",
    lastUpdated: "2024-01-15",
    status: "open",
    affectedAssets: [
      {
        id: "1",
        name: "DJI M300 RTK #001",
        type: "无人机",
        ip: "192.168.1.100",
        impact: "完全控制权限丢失",
      },
      {
        id: "2",
        name: "DJI M300 RTK #002",
        type: "无人机",
        ip: "192.168.1.101",
        impact: "数据泄露风险",
      },
    ],
    technicalDetails: {
      attackVector: "网络",
      complexity: "低",
      privilegesRequired: "无",
      userInteraction: "无",
      scope: "未改变",
      confidentialityImpact: "高",
      integrityImpact: "高",
      availabilityImpact: "高",
    },
    remediation: {
      summary: "立即更新飞控固件至最新版本，启用访问控制，配置防火墙规则限制网络访问。",
      steps: [
        {
          id: 1,
          title: "紧急隔离受影响设备",
          description: "立即断开受影响无人机的网络连接，防止进一步攻击",
          completed: false,
          estimatedTime: "5分钟",
        },
        {
          id: 2,
          title: "下载最新固件",
          description: "从DJI官方网站下载最新的飞控固件版本",
          completed: false,
          estimatedTime: "10分钟",
        },
        {
          id: 3,
          title: "备份当前配置",
          description: "在更新前备份当前的飞控配置和飞行数据",
          command: "dji-assistant --backup --output /backup/config_$(date +%Y%m%d).tar.gz",
          completed: false,
          estimatedTime: "15分钟",
        },
        {
          id: 4,
          title: "更新飞控固件",
          description: "使用DJI Assistant 2更新飞控固件到最新版本",
          completed: false,
          estimatedTime: "30分钟",
        },
        {
          id: 5,
          title: "配置访问控制",
          description: "启用飞控系统的访问控制功能，设置强密码",
          completed: false,
          estimatedTime: "10分钟",
        },
        {
          id: 6,
          title: "网络安全配置",
          description: "配置防火墙规则，限制对飞控系统的网络访问",
          command: "iptables -A INPUT -p tcp --dport 8080 -s 192.168.1.0/24 -j ACCEPT",
          completed: false,
          estimatedTime: "20分钟",
        },
        {
          id: 7,
          title: "验证修复效果",
          description: "进行安全测试，验证漏洞已被成功修复",
          completed: false,
          estimatedTime: "30分钟",
        },
      ],
      references: [
        {
          title: "DJI 官方安全公告",
          url: "https://security.dji.com/advisory/CVE-2024-0001",
          type: "vendor",
        },
        {
          title: "CVE-2024-0001 详情",
          url: "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0001",
          type: "cve",
        },
        {
          title: "固件更新指南",
          url: "https://www.dji.com/support/firmware-update",
          type: "patch",
        },
      ],
    },
    compliance: {
      standards: ["GB/T 36572-2018", "IEC 62443-3-3", "ISO 27001"],
      requirements: ["电力监控系统安全防护要求", "工业通信网络安全标准"],
    },
    timeline: [
      {
        date: "2024-01-15 14:30",
        event: "漏洞发现",
        user: "安全扫描系统",
        description: "自动扫描发现未授权访问漏洞",
      },
      {
        date: "2024-01-15 14:35",
        user: "张工程师",
        event: "漏洞确认",
        description: "手动验证漏洞存在性，确认为真实漏洞",
      },
    ],
  })

  const [remediationProgress, setRemediationProgress] = useState(0)
  const [notes, setNotes] = useState("")

  const getSeverityColor = (severity: string) => {
    switch (severity) {
      case "critical":
        return "bg-red-500 text-white"
      case "high":
        return "bg-orange-500 text-white"
      case "medium":
        return "bg-yellow-500 text-white"
      case "low":
        return "bg-blue-500 text-white"
      default:
        return "bg-gray-500 text-white"
    }
  }

  const getStatusColor = (status: string) => {
    switch (status) {
      case "open":
        return "destructive"
      case "in-progress":
        return "default"
      case "resolved":
        return "secondary"
      case "false-positive":
        return "outline"
      default:
        return "secondary"
    }
  }

  const getStatusText = (status: string) => {
    switch (status) {
      case "open":
        return "待处理"
      case "in-progress":
        return "处理中"
      case "resolved":
        return "已解决"
      case "false-positive":
        return "误报"
      default:
        return status
    }
  }

  const toggleStepCompletion = (stepId: number) => {
    const updatedSteps = vulnerability.remediation.steps.map((step) =>
      step.id === stepId ? { ...step, completed: !step.completed } : step,
    )

    const completedSteps = updatedSteps.filter((step) => step.completed).length
    const progress = (completedSteps / updatedSteps.length) * 100
    setRemediationProgress(progress)
  }

  const copyToClipboard = (text: string) => {
    navigator.clipboard.writeText(text)
  }

  return (
    <div className="min-h-screen bg-gray-50 p-6">
      <div className="max-w-6xl mx-auto">
        {/* Header */}
        <div className="mb-6">
          <Button variant="ghost" className="mb-4">
            <ArrowLeft className="h-4 w-4 mr-2" />
            返回漏洞列表
          </Button>

          <div className="flex items-start justify-between">
            <div>
              <div className="flex items-center gap-3 mb-2">
                <Badge className={getSeverityColor(vulnerability.severity)}>
                  {vulnerability.severity.toUpperCase()}
                </Badge>
                <Badge variant="outline">{vulnerability.cveId}</Badge>
                <Badge variant={getStatusColor(vulnerability.status)}>{getStatusText(vulnerability.status)}</Badge>
              </div>
              <h1 className="text-3xl font-bold text-gray-900 mb-2">{vulnerability.title}</h1>
              <div className="flex items-center gap-4 text-sm text-gray-600">
                <span className="flex items-center gap-1">
                  <Calendar className="h-4 w-4" />
                  发现时间: {vulnerability.discoveredDate}
                </span>
                <span className="flex items-center gap-1">
                  <Clock className="h-4 w-4" />
                  更新时间: {vulnerability.lastUpdated}
                </span>
              </div>
            </div>

            <div className="flex gap-2">
              <Button variant="outline">
                <Download className="h-4 w-4 mr-2" />
                导出报告
              </Button>
              <Button>
                <Wrench className="h-4 w-4 mr-2" />
                开始修复
              </Button>
            </div>
          </div>
        </div>

        {/* CVSS Score Card */}
        <Card className="mb-6">
          <CardContent className="p-6">
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              <div className="text-center">
                <div className="text-4xl font-bold text-red-600 mb-2">{vulnerability.cvssScore}</div>
                <div className="text-sm text-gray-600">CVSS 3.1 评分</div>
              </div>
              <div className="md:col-span-2">
                <div className="text-sm text-gray-600 mb-2">CVSS 向量</div>
                <div className="font-mono text-sm bg-gray-100 p-2 rounded flex items-center justify-between">
                  <span>{vulnerability.cvssVector}</span>
                  <Button size="sm" variant="ghost" onClick={() => copyToClipboard(vulnerability.cvssVector)}>
                    <Copy className="h-4 w-4" />
                  </Button>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Main Content */}
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
          {/* Left Column - Main Info */}
          <div className="lg:col-span-2 space-y-6">
            <Tabs defaultValue="overview" className="w-full">
              <TabsList className="grid w-full grid-cols-4">
                <TabsTrigger value="overview">概览</TabsTrigger>
                <TabsTrigger value="technical">技术细节</TabsTrigger>
                <TabsTrigger value="remediation">修复指导</TabsTrigger>
                <TabsTrigger value="timeline">处理记录</TabsTrigger>
              </TabsList>

              {/* Overview Tab */}
              <TabsContent value="overview" className="space-y-6">
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                      <Eye className="h-5 w-5" />
                      漏洞描述
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <p className="text-gray-700 leading-relaxed">{vulnerability.description}</p>
                  </CardContent>
                </Card>

                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                      <Target className="h-5 w-5" />
                      受影响资产
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-3">
                      {vulnerability.affectedAssets.map((asset) => (
                        <div key={asset.id} className="flex items-center justify-between p-3 border rounded-lg">
                          <div className="flex items-center gap-3">
                            <Server className="h-4 w-4 text-gray-500" />
                            <div>
                              <div className="font-medium">{asset.name}</div>
                              <div className="text-sm text-gray-500">{asset.ip}</div>
                            </div>
                          </div>
                          <div className="text-right">
                            <div className="text-sm font-medium text-red-600">{asset.impact}</div>
                            <div className="text-xs text-gray-500">{asset.type}</div>
                          </div>
                        </div>
                      ))}
                    </div>
                  </CardContent>
                </Card>

                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                      <Shield className="h-5 w-5" />
                      合规性要求
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-4">
                      <div>
                        <h4 className="font-medium mb-2">相关标准</h4>
                        <div className="flex flex-wrap gap-2">
                          {vulnerability.compliance.standards.map((standard, index) => (
                            <Badge key={index} variant="outline">
                              {standard}
                            </Badge>
                          ))}
                        </div>
                      </div>
                      <div>
                        <h4 className="font-medium mb-2">合规要求</h4>
                        <ul className="list-disc list-inside space-y-1 text-sm text-gray-600">
                          {vulnerability.compliance.requirements.map((req, index) => (
                            <li key={index}>{req}</li>
                          ))}
                        </ul>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </TabsContent>

              {/* Technical Details Tab */}
              <TabsContent value="technical" className="space-y-6">
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                      <Code className="h-5 w-5" />
                      CVSS 技术细节
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="grid grid-cols-2 gap-4">
                      <div>
                        <div className="text-sm font-medium text-gray-600">攻击向量</div>
                        <div className="text-sm">{vulnerability.technicalDetails.attackVector}</div>
                      </div>
                      <div>
                        <div className="text-sm font-medium text-gray-600">攻击复杂度</div>
                        <div className="text-sm">{vulnerability.technicalDetails.complexity}</div>
                      </div>
                      <div>
                        <div className="text-sm font-medium text-gray-600">所需权限</div>
                        <div className="text-sm">{vulnerability.technicalDetails.privilegesRequired}</div>
                      </div>
                      <div>
                        <div className="text-sm font-medium text-gray-600">用户交互</div>
                        <div className="text-sm">{vulnerability.technicalDetails.userInteraction}</div>
                      </div>
                      <div>
                        <div className="text-sm font-medium text-gray-600">影响范围</div>
                        <div className="text-sm">{vulnerability.technicalDetails.scope}</div>
                      </div>
                      <div>
                        <div className="text-sm font-medium text-gray-600">机密性影响</div>
                        <div className="text-sm">{vulnerability.technicalDetails.confidentialityImpact}</div>
                      </div>
                      <div>
                        <div className="text-sm font-medium text-gray-600">完整性影响</div>
                        <div className="text-sm">{vulnerability.technicalDetails.integrityImpact}</div>
                      </div>
                      <div>
                        <div className="text-sm font-medium text-gray-600">可用性影响</div>
                        <div className="text-sm">{vulnerability.technicalDetails.availabilityImpact}</div>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </TabsContent>

              {/* Remediation Tab */}
              <TabsContent value="remediation" className="space-y-6">
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                      <Wrench className="h-5 w-5" />
                      修复概要
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <Alert>
                      <AlertTriangle className="h-4 w-4" />
                      <AlertDescription>{vulnerability.remediation.summary}</AlertDescription>
                    </Alert>
                  </CardContent>
                </Card>

                <Card>
                  <CardHeader>
                    <CardTitle>修复步骤</CardTitle>
                    <CardDescription>完成进度: {Math.round(remediationProgress)}%</CardDescription>
                    <Progress value={remediationProgress} className="w-full" />
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-4">
                      {vulnerability.remediation.steps.map((step) => (
                        <div key={step.id} className="border rounded-lg p-4">
                          <div className="flex items-start gap-3">
                            <Button
                              size="sm"
                              variant={step.completed ? "default" : "outline"}
                              onClick={() => toggleStepCompletion(step.id)}
                              className="mt-1"
                            >
                              {step.completed ? (
                                <CheckCircle className="h-4 w-4" />
                              ) : (
                                <div className="h-4 w-4 border rounded-full" />
                              )}
                            </Button>
                            <div className="flex-1">
                              <div className="flex items-center justify-between mb-2">
                                <h4 className={`font-medium ${step.completed ? "line-through text-gray-500" : ""}`}>
                                  步骤 {step.id}: {step.title}
                                </h4>
                                <Badge variant="outline">{step.estimatedTime}</Badge>
                              </div>
                              <p className={`text-sm text-gray-600 mb-2 ${step.completed ? "line-through" : ""}`}>
                                {step.description}
                              </p>
                              {step.command && (
                                <div className="bg-gray-100 p-2 rounded font-mono text-sm flex items-center justify-between">
                                  <code>{step.command}</code>
                                  <Button size="sm" variant="ghost" onClick={() => copyToClipboard(step.command!)}>
                                    <Copy className="h-4 w-4" />
                                  </Button>
                                </div>
                              )}
                            </div>
                          </div>
                        </div>
                      ))}
                    </div>
                  </CardContent>
                </Card>

                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                      <BookOpen className="h-5 w-5" />
                      参考资料
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-2">
                      {vulnerability.remediation.references.map((ref, index) => (
                        <div key={index} className="flex items-center justify-between p-2 border rounded">
                          <div className="flex items-center gap-2">
                            <ExternalLink className="h-4 w-4 text-gray-500" />
                            <span className="text-sm">{ref.title}</span>
                            <Badge variant="outline" className="text-xs">
                              {ref.type}
                            </Badge>
                          </div>
                          <Button size="sm" variant="ghost" asChild>
                            <a href={ref.url} target="_blank" rel="noopener noreferrer">
                              <ExternalLink className="h-4 w-4" />
                            </a>
                          </Button>
                        </div>
                      ))}
                    </div>
                  </CardContent>
                </Card>
              </TabsContent>

              {/* Timeline Tab */}
              <TabsContent value="timeline" className="space-y-6">
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                      <Clock className="h-5 w-5" />
                      处理时间线
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-4">
                      {vulnerability.timeline.map((event, index) => (
                        <div key={index} className="flex gap-4">
                          <div className="flex flex-col items-center">
                            <div className="w-3 h-3 bg-blue-500 rounded-full" />
                            {index < vulnerability.timeline.length - 1 && (
                              <div className="w-px h-12 bg-gray-300 mt-2" />
                            )}
                          </div>
                          <div className="flex-1 pb-4">
                            <div className="flex items-center gap-2 mb-1">
                              <span className="font-medium">{event.event}</span>
                              <Badge variant="outline" className="text-xs">
                                {event.user}
                              </Badge>
                            </div>
                            <div className="text-sm text-gray-600 mb-1">{event.description}</div>
                            <div className="text-xs text-gray-500">{event.date}</div>
                          </div>
                        </div>
                      ))}
                    </div>
                  </CardContent>
                </Card>
              </TabsContent>
            </Tabs>
          </div>

          {/* Right Column - Actions & Notes */}
          <div className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Activity className="h-5 w-5" />
                  快速操作
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-3">
                <Button className="w-full" variant="destructive">
                  <AlertCircle className="h-4 w-4 mr-2" />
                  标记为紧急
                </Button>
                <Button className="w-full bg-transparent" variant="outline">
                  <User className="h-4 w-4 mr-2" />
                  分配处理人
                </Button>
                <Button className="w-full bg-transparent" variant="outline">
                  <FileText className="h-4 w-4 mr-2" />
                  生成工单
                </Button>
                <Separator />
                <Button className="w-full" variant="secondary">
                  <CheckCircle className="h-4 w-4 mr-2" />
                  标记为已解决
                </Button>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>处理备注</CardTitle>
              </CardHeader>
              <CardContent>
                <Textarea
                  placeholder="添加处理备注..."
                  value={notes}
                  onChange={(e) => setNotes(e.target.value)}
                  className="min-h-[100px]"
                />
                <Button className="w-full mt-3">保存备注</Button>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>风险评估</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-3">
                  <div className="flex justify-between">
                    <span className="text-sm">业务影响</span>
                    <Badge variant="destructive">严重</Badge>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-sm">利用难度</span>
                    <Badge variant="outline">容易</Badge>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-sm">修复优先级</span>
                    <Badge variant="destructive">P0</Badge>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-sm">预计修复时间</span>
                    <span className="text-sm">2小时</span>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </div>
  )
}
